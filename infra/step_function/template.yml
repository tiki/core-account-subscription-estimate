AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Core Account Subscription Estimate

Parameters:
  Name:
    Description: The service name (lowercase pipecase)
    Type: String
    Default: core-account-cleanroom-create
  Workgroup:
    Description: The athena workgroup to use
    Type: String
    Default: primary
  ApiEndpoint:
    Description: The base http endpoint to receive the result (without https:// prefix)
    Type: String
    Default: account.mytiki.com
  ApiAuthorization:
    Description: The EventBridge connection id (i.e. name/id)
    Type: String
  OceanAccount:
    Description: Account ID for the ocean catalog
    Type: String

Resources:
  Step:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Ref Name
      Type: STANDARD
      Role: !GetAtt Role.Arn
      DefinitionUri: ../../out/state_machine.json
      DefinitionSubstitutions:
        athena_workgroup: !Ref Workgroup
        api_endpoint: !Ref ApiEndpoint
        api_authorization: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:connection/${ApiAuthorization}
      Tracing:
        Enabled: true
      Logging:
        Level: ERROR
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt LogGroup.Arn
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref Name
      RetentionInDays: 30
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref Name
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: states.amazonaws.com
      Policies:
        - PolicyName: Cloudwatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:CreateLogStream
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutLogEvents
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: "*"
        - PolicyName: Athena
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - athena:startQueryExecution
                  - athena:stopQueryExecution
                  - athena:getQueryExecution
                  - athena:getDataCatalog
                  - athena:getQueryResults
                Resource:
                  - !Sub arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/*
                  - !Sub arn:aws:athena:${AWS::Region}:${AWS::AccountId}:datacatalog/*
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                  - s3:CreateBucket
                  - s3:PutObject
                Resource: arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - glue:GetDatabase
                  - glue:GetDatabases
                  - glue:CreateDatabase
                  - glue:UpdateDatabase
                  - glue:DeleteDatabase
                  - glue:GetTable
                  - glue:GetTables
                  - glue:CreateTable
                  - glue:UpdateTable
                  - glue:DeleteTable
                  - glue:GetPartition
                  - glue:GetPartitions
                  - glue:CreatePartition
                  - glue:UpdatePartition
                  - glue:DeletePartition
                  - glue:BatchDeleteTable
                  - glue:BatchGetPartition
                  - glue:BatchCreatePartition
                  - glue:BatchDeletePartition
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${OceanAccount}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${OceanAccount}:database/*
                  - !Sub arn:aws:glue:${AWS::Region}:${OceanAccount}:table/*
                  - !Sub arn:aws:glue:${AWS::Region}:${OceanAccount}:userDefinedFunction/*
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/*
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/*
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:userDefinedFunction/*
              - Effect: Allow
                Action: lakeformation:GetDataAccess
                Resource: "*"
        - PolicyName: Http
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: events:RetrieveConnectionCredentials
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:connection/${ApiAuthorization}
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:events!connection/${ApiAuthorization}
              - Effect: Allow
                Action: states:InvokeHTTPEndpoint
                Resource: !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:*
                Condition:
                  StringLike:
                    states:HTTPEndpoint: !Sub https://${ApiEndpoint}/*
                    states:HTTPMethod: POST
        - PolicyName: XRay
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"

  LFDatabaseRF:
    Type: AWS::LakeFormation::Permissions
    Properties:
      DataLakePrincipal:
        DataLakePrincipalIdentifier: !GetAtt Role.Arn
      Permissions:
        - DESCRIBE
      Resource:
        DatabaseResource:
          CatalogId: !Ref AWS::AccountId
          Name: tiki
  LFDatabase:
    Type: AWS::LakeFormation::Permissions
    Properties:
      DataLakePrincipal:
        DataLakePrincipalIdentifier: !GetAtt Role.Arn
      Permissions:
        - DESCRIBE
      Resource:
        DatabaseResource:
          CatalogId: !Ref OceanAccount
          Name: tiki
  LFTableRF:
    Type: AWS::LakeFormation::Permissions
    Properties:
      DataLakePrincipal:
        DataLakePrincipalIdentifier: !GetAtt Role.Arn
      Permissions:
        - DESCRIBE
        - SELECT
      Resource:
        TableResource:
          CatalogId: !Ref AWS::AccountId
          DatabaseName: tiki
          TableWildcard: {}
  LFTable:
    Type: AWS::LakeFormation::Permissions
    Properties:
      DataLakePrincipal:
        DataLakePrincipalIdentifier: !GetAtt Role.Arn
      Permissions:
        - DESCRIBE
        - SELECT
      Resource:
        TableResource:
          CatalogId: !Ref OceanAccount
          DatabaseName: tiki
          TableWildcard: {}
